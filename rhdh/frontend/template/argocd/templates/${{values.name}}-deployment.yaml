apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ${{values.name}}-front-end
    app.kubernetes.io/component: ${{values.name}}-front-end
    app.kubernetes.io/instance: ${{values.name}}-front-end
    app.kubernetes.io/name: ${{values.name}}-front-end
    app.kubernetes.io/part-of: app
    app.openshift.io/runtime: redhat
  name: ${{values.name}}-front-end
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ${{values.name}}-front-end
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ${{values.name}}-front-end
        deployment: ${{values.name}}-front-end
        version: "v1"
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - env:
        - name: SERVICE_LOCAL
          value: ${{values.name}}-front-end
        - name: SERVICE_REMOTE
          value: ${{values.backendServiceName}}
        image: ${{values.image}}
        imagePullPolicy: Always
        name: ${{values.name}}-front-end
        resources:
          requests:
            memory: "256Mi"
            cpu: "500m"
          limits:
            memory: "512Mi"
            cpu: "1"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30